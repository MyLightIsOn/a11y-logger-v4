create table public.vpat (
  id uuid not null default gen_random_uuid (),
  project_id uuid not null,
  title text not null,
  status public.vpat_status not null default 'draft'::vpat_status,
  created_by uuid not null,
  created_at timestamp with time zone not null default now(),
  updated_at timestamp with time zone not null default now(),
  current_version_id uuid null,
  description text null,
  constraint vpat_pkey primary key (id),
  constraint vpat_current_version_fkey foreign KEY (current_version_id) references vpat_version (id) deferrable initially DEFERRED,
  constraint vpat_project_id_fkey foreign KEY (project_id) references projects (id) on delete CASCADE
) TABLESPACE pg_default;

create index IF not exists vpat_project_id_idx on public.vpat using btree (project_id) TABLESPACE pg_default;

create index IF not exists vpat_status_idx on public.vpat using btree (status) TABLESPACE pg_default;

create trigger trg_set_updated_at_vpat BEFORE
update on vpat for EACH row
execute FUNCTION set_updated_at ();
